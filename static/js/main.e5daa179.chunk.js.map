{"version":3,"sources":["components/fbAuth/FirebaseProvider.js","components/fbAuth/Login.js","index.js","components/fbAuth/fireBaseConfig.js"],"names":["FirebaseContext","createContext","Login","history","useHistory","login","useContext","signInWithGoogle","useState","email","setEmail","password","setPassword","Form","className","onSubmit","e","preventDefault","then","push","catch","alert","Group","controlId","Label","Control","type","placeholder","onChange","target","value","Button","variant","onClick","response","to","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAQaA,G,MAAkBC,2BCHhB,SAASC,IACvB,IAAMC,EAAUC,cACRC,EAAUC,qBAAWN,GAArBK,MACAE,EAAqBD,qBAAWN,GAAhCO,iBAHuB,EAKLC,qBALK,mBAKxBC,EALwB,KAKjBC,EALiB,OAMCF,qBAND,mBAMxBG,EANwB,KAMdC,EANc,KAmB/B,OACC,cAACC,EAAA,EAAD,CAAMC,UAAU,OAAOC,SAZJ,SAACC,GACpBA,EAAEC,iBACFZ,EAAMI,EAAOE,GACXO,MAAK,kBAAMf,EAAQgB,KAAK,QACxBC,OAAM,kBAAMC,MAAM,iCAQpB,SACC,qCACC,eAACR,EAAA,EAAKS,MAAN,CAAYC,UAAU,wBAAtB,UACC,cAACV,EAAA,EAAKW,MAAN,sBACA,cAACX,EAAA,EAAKY,QAAN,CACCC,KAAK,QACLC,YAAY,cACZC,SAAU,SAACZ,GAAD,OAAON,EAASM,EAAEa,OAAOC,aAIrC,eAACjB,EAAA,EAAKS,MAAN,CAAYC,UAAU,6BAAtB,UACC,cAACV,EAAA,EAAKW,MAAN,yBACA,cAACX,EAAA,EAAKY,QAAN,CACCC,KAAK,WACLC,YAAY,WACZC,SAAU,SAACZ,GAAD,OAAOJ,EAAYI,EAAEa,OAAOC,aAIxC,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUN,KAAK,SAA/B,oBAGA,qBAAKZ,UAAU,KAAf,oBAGA,cAACiB,EAAA,EAAD,CAAQE,QA/BS,WACnB1B,IAAmBW,MAAK,SAACgB,GAAD,OAAc/B,EAAQgB,KAAK,SA8BnBa,QAAQ,OAAtC,+BAIA,6BACC,sBAAKlB,UAAU,WAAf,6BACiB,cAAC,IAAD,CAAMqB,GAAG,WAAT,gC,MCjDtBC,IAASC,cCNqB,CAC7BC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,0DACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBDDhBC,IAASC,OACR,cAAC,IAAMC,WAAP,UACE,cAAC9C,EAAD,MAEF+C,SAASC,eAAe,W","file":"static/js/main.e5daa179.chunk.js","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n/*\n    The context is imported and used by individual components\n    that need data\n*/\nexport const FirebaseContext = createContext();\n\n/*\n This component establishes what data can be used.\n */\nexport const FirebaseProvider = (props) => {\n\tconst userProfile = sessionStorage.getItem(\"userProfile\");\n\tconst [isLoggedIn, setIsLoggedIn] = useState(userProfile != null);\n\n\tconst [isFirebaseReady, setIsFirebaseReady] = useState(false);\n\n\tconst provider = new firebase.auth.GoogleAuthProvider();\n\n\tuseEffect(() => {\n\t\tfirebase.auth().onAuthStateChanged((u) => {\n\t\t\tsetIsFirebaseReady(true);\n\t\t});\n\t}, []);\n\n\t//setup other firebase logins\n\n\tconst login = (email, pw) => {\n\t\treturn firebase\n\t\t\t.auth()\n\t\t\t.signInWithEmailAndPassword(email, pw)\n\n\t\t\t.then((userProfile) => {\n\t\t\t\tsessionStorage.setItem(\n\t\t\t\t\t\"userProfile\",\n\t\t\t\t\tJSON.stringify(userProfile.user)\n\t\t\t\t);\n\t\t\t\tsetIsLoggedIn(true);\n\t\t\t});\n\t};\n\n\tconst logout = () => {\n\t\treturn firebase\n\t\t\t.auth()\n\t\t\t.signOut()\n\t\t\t.then(() => {\n\t\t\t\tsessionStorage.clear();\n\t\t\t\tsetIsLoggedIn(false);\n\t\t\t});\n\t};\n\n\tconst signInWithGoogle = () => {\n\t\treturn firebase\n\t\t\t.auth()\n\t\t\t.signInWithPopup(provider)\n\t\t\t.then((savedUserProfile) => {\n\t\t\t\tconsole.log(\"savedU\", savedUserProfile);\n\t\t\t\tsessionStorage.setItem(\n\t\t\t\t\t\"userProfile\",\n\t\t\t\t\tJSON.stringify(savedUserProfile.user)\n\t\t\t\t);\n\t\t\t\tsetIsLoggedIn(true);\n\t\t\t});\n\t};\n\n\tconst register = (userProfile, password) => {\n\t\treturn firebase\n\t\t\t.auth()\n\t\t\t.createUserWithEmailAndPassword(userProfile.email, password)\n\t\t\t.then((savedUserProfile) => {\n\t\t\t\tconsole.log(\"savedU\", savedUserProfile);\n\t\t\t\tsessionStorage.setItem(\n\t\t\t\t\t\"userProfile\",\n\t\t\t\t\tJSON.stringify(savedUserProfile.user)\n\t\t\t\t);\n\t\t\t\tsetIsLoggedIn(true);\n\t\t\t});\n\t};\n\n\t/*\n    You return a context provider\n    allow any child elements to access them.\n*/\n\n\treturn (\n\t\t<FirebaseContext.Provider\n\t\t\tvalue={{ isLoggedIn, login, logout, register, signInWithGoogle }}\n\t\t>\n\t\t\t{isFirebaseReady ? (\n\t\t\t\tprops.children\n\t\t\t) : (\n\t\t\t\t<Spinner className=\"app-spinner dark\" />\n\t\t\t)}\n\t\t</FirebaseContext.Provider>\n\t);\n};\n","import React, { useState, useContext } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { FirebaseContext } from \"./FirebaseProvider\";\n\nexport default function Login() {\n\tconst history = useHistory();\n\tconst { login } = useContext(FirebaseContext);\n\tconst { signInWithGoogle } = useContext(FirebaseContext);\n\n\tconst [email, setEmail] = useState();\n\tconst [password, setPassword] = useState();\n\n\tconst loginSubmit = (e) => {\n\t\te.preventDefault();\n\t\tlogin(email, password)\n\t\t\t.then(() => history.push(\"/\"))\n\t\t\t.catch(() => alert(\"Invalid email or password\"));\n\t};\n\n\tconst loginGoogle = () => {\n\t\tsignInWithGoogle().then((response) => history.push(\"/\"));\n\t};\n\n\treturn (\n\t\t<Form className=\"Form\" onSubmit={loginSubmit}>\n\t\t\t<fieldset>\n\t\t\t\t<Form.Group controlId=\"formPlaintextPassword\">\n\t\t\t\t\t<Form.Label>Email: </Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tplaceholder=\"Enter email\"\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId=\"exampleForm.ControlSelect1\">\n\t\t\t\t\t<Form.Label>Password: </Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Button variant=\"primary\" type=\"submit\">\n\t\t\t\t\tSubmit\n\t\t\t\t</Button>\n\t\t\t\t<div className=\"or\">\n\t\t\t\t\t- or -\n\t\t\t\t</div>\n\t\t\t\t<Button onClick={loginGoogle} variant=\"link\">\n\t\t\t\t\tLogin with Google\n\t\t\t\t</Button>\n\n\t\t\t\t<em>\n\t\t\t\t\t<div className=\"register\">\n\t\t\t\t\t\tNot registered? <Link to=\"register\">Register</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</em>\n\t\t\t</fieldset>\n\t\t</Form>\n\t);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Login from \"./components/fbAuth/Login\";\nimport \"./custom.scss\";\nimport { firebaseConfig } from \"./components/fbAuth/fireBaseConfig\";\nimport firebase from \"firebase/app\";\n\n\nfirebase.initializeApp(firebaseConfig);\nReactDOM.render(\t\n\t<React.StrictMode>\n\t\t\t<Login/>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n","//file for firebase\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nexport const firebaseConfig = {\n\tapiKey: \"AIzaSyDhYIu6EQI0Be8BBJXNTd80H_tffLCLGJQ\",\n\tauthDomain: \"christmaslist-a8957.firebaseapp.com\",\n\tdatabaseURL: \"https://christmaslist-a8957-default-rtdb.firebaseio.com\",\n\tprojectId: \"christmaslist-a8957\",\n\tstorageBucket: \"christmaslist-a8957.appspot.com\",\n\tmessagingSenderId: \"146934597776\",\n\tappId: \"1:146934597776:web:a443d3c3db4540260e3015\",\n\tmeasurementId: \"G-BF1404LWNQ\",\n};\n"],"sourceRoot":""}